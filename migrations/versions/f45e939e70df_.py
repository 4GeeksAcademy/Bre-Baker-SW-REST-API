"""empty message

Revision ID: f45e939e70df
Revises: c18a87f0197f
Create Date: 2023-05-17 21:52:56.422176

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f45e939e70df'
down_revision = 'c18a87f0197f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('comment')
    op.drop_table('blog_post')
    op.drop_table('address')
    with op.batch_alter_table('favorites', schema=None) as batch_op:
        batch_op.alter_column('favorite_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('favorite_type',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)

    with op.batch_alter_table('planets', schema=None) as batch_op:
        batch_op.alter_column('population',
               existing_type=sa.VARCHAR(length=25),
               nullable=True)
        batch_op.alter_column('climate',
               existing_type=sa.VARCHAR(length=25),
               nullable=True)

    with op.batch_alter_table('starships', schema=None) as batch_op:
        batch_op.alter_column('length',
               existing_type=sa.NUMERIC(precision=25, scale=0),
               nullable=True)
        batch_op.alter_column('pilots',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=False))
        batch_op.alter_column('firstname',
               existing_type=sa.VARCHAR(length=250),
               type_=sa.String(length=25),
               existing_nullable=False)
        batch_op.alter_column('lastname',
               existing_type=sa.VARCHAR(length=250),
               type_=sa.String(length=25),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=250),
               type_=sa.String(length=25),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('email',
               existing_type=sa.String(length=25),
               type_=sa.VARCHAR(length=250),
               existing_nullable=False)
        batch_op.alter_column('lastname',
               existing_type=sa.String(length=25),
               type_=sa.VARCHAR(length=250),
               existing_nullable=False)
        batch_op.alter_column('firstname',
               existing_type=sa.String(length=25),
               type_=sa.VARCHAR(length=250),
               existing_nullable=False)
        batch_op.drop_column('is_active')

    with op.batch_alter_table('starships', schema=None) as batch_op:
        batch_op.alter_column('pilots',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('length',
               existing_type=sa.NUMERIC(precision=25, scale=0),
               nullable=False)

    with op.batch_alter_table('planets', schema=None) as batch_op:
        batch_op.alter_column('climate',
               existing_type=sa.VARCHAR(length=25),
               nullable=False)
        batch_op.alter_column('population',
               existing_type=sa.VARCHAR(length=25),
               nullable=False)

    with op.batch_alter_table('favorites', schema=None) as batch_op:
        batch_op.alter_column('favorite_type',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('favorite_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    op.create_table('address',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('street_name', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('street_number', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('post_code', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='address_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='address_pkey')
    )
    op.create_table('blog_post',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('blog_post_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='blog_post_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='blog_post_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('comment',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['blog_post.id'], name='comment_post_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='comment_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='comment_pkey')
    )
    # ### end Alembic commands ###
